/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
rule EverybodyCanReadUserParticipant {
    description: "Allow all participants read access to all resources"
    participant: "org.mengxuanliu.valuesharing.UserParticipant"
    operation: READ
    resource: "org.mengxuanliu.valuesharing.UserParticipant"
    action: ALLOW
}

/*rule EverybodyCanSubmitTransactions {
    description: "Allow all participants to submit transactions"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: CREATE
    resource(r): "org.mengxuanliu.valuesharing.SampleTransaction"
  	condition:(r.asset.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}*/

rule OwnerCanSubmitChangeOwnerTransactions {
    description: "Allow Owner to submit ChangeOwner transactions"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: CREATE
    resource(r): "org.mengxuanliu.valuesharing.ChangeOwner"
  	condition:(r.album.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule ViewerCanSubmitViewerReadAlbums {
    description: "Allow viewers to submit ViewerReadAsset transactions"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: CREATE
    resource(r): "org.mengxuanliu.valuesharing.ViewerReadAlbum"
    condition: (r.album.viewer.findIndex(function(element){return element.viewer.getIdentifier()==p.getIdentifier()&&element.counter>0;})!=-1)
    action: ALLOW
}
rule OwnerCanSubmitOwnerAddViewers{
  description:"Allow owners to submit OwnerAddViewer transcations"
  participant(p):"org.mengxuanliu.valuesharing.UserParticipant"
  operation: CREATE
  resource(r):"org.mengxuanliu.valuesharing.OwnerAddViewer"
  condition:(r.album.owner.getIdentifier() === p.getIdentifier())
  action:ALLOW
}
rule OwnerCanSubmitOwnerAddPhotos{
  description:"Allow owners to submit OwnerAddViewer transcations"
  participant(p):"org.mengxuanliu.valuesharing.UserParticipant"
  operation: CREATE
  resource(r):"org.mengxuanliu.valuesharing.OwnerAddPhotos"
  condition:(r.album.owner.getIdentifier() === p.getIdentifier())
  action:ALLOW
}
rule OwnerHasReadAccessToTheirAlbums {
    description: "Allow all participants full access to their assets"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: READ
    resource(r): "org.mengxuanliu.valuesharing.Album"
    condition: (r.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}
rule OwnerHasAccessToAddViewers {
    description: "Allow owners to add viewers"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: READ,UPDATE
    resource(r): "org.mengxuanliu.valuesharing.Album"
  	transaction(tx): "org.mengxuanliu.valuesharing.OwnerAddViewer" 
    condition: (r.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}
rule ViewerHasReadAccessToTheirAlbums {
    description: "Allow viewers read access to their albums"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: READ,UPDATE
    resource(r): "org.mengxuanliu.valuesharing.Album"
  	transaction(tx): "org.mengxuanliu.valuesharing.ViewerReadAlbum" 
    condition: (r.viewer.findIndex(function(element){return element.viewer.getIdentifier()==p.getIdentifier()&&element.counter>0;})!=-1)
    action: ALLOW
}
rule OwnersHasAccessToAddPhotos {
    description: "Allow owners access to add photo"
    participant(p): "org.mengxuanliu.valuesharing.UserParticipant"
    operation: READ,UPDATE
    resource(r): "org.mengxuanliu.valuesharing.Album"
  	transaction(tx): "org.mengxuanliu.valuesharing.OwnerAddPhotos" 
    condition: (r.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}
rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}